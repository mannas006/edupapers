# Nginx configuration for EduPapers Webhook Service
# Place this in /etc/nginx/sites-available/edupapers-webhook
# Then create symlink: sudo ln -s /etc/nginx/sites-available/edupapers-webhook /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name webhook.edupapers.site;  # Replace with your domain
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=10r/m;
    
    location / {
        limit_req zone=webhook burst=5 nodelay;
        
        # Proxy to Flask application
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings for large file uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        
        # Large file upload support
        client_max_body_size 100M;
        client_body_timeout 60s;
    }
    
    # Health check endpoint (bypass rate limiting)
    location /health {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Logs
    access_log /var/log/nginx/edupapers-webhook.access.log;
    error_log /var/log/nginx/edupapers-webhook.error.log;
}

# SSL configuration (recommended for production)
# Use Let's Encrypt: sudo certbot --nginx -d webhook.edupapers.site
# server {
#     listen 443 ssl http2;
#     server_name webhook.edupapers.site;
#     
#     ssl_certificate /etc/letsencrypt/live/webhook.edupapers.site/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/webhook.edupapers.site/privkey.pem;
#     
#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # ... rest of configuration same as above
# }
